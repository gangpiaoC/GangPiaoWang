//
//  GPWHTTopCell.swift
//  GangPiaoWang
//
//  Created by gangpiaowang on 2016/12/20.
//  Copyright © 2016年 GC. All rights reserved.
//

import UIKit
import SwiftyJSON
import SnapKit

class GPWHTTopCell: UITableViewCell {
    private let staticIncomeLabel: UILabel = {
        let label = UILabel()
        label.textColor = subTitleColor
        label.text = "年化利率"
        label.textAlignment = .center
        label.font = UIFont.customFont(ofSize: 14)
        return label
    }()
    
    private let incomeLabel: UILabel = {
        let label = UILabel()
        label.textAlignment = .center
        label.font = UIFont.customFont(ofSize: 72)
        label.textColor = redTitleColor
        label.attributedText = NSAttributedString.attributedString( "0", mainColor: redTitleColor, mainFont: 72, second: "%", secondColor: redTitleColor, secondFont: 36)
        return label
    }()
    
    private let staticDateLabel: UILabel = {
        let label = UILabel()
        label.text = "借款期限"
        label.textColor = subTitleColor
        label.font = UIFont.customFont(ofSize: 14.0)
        return label
    }()
    
    private let dateLabel: UILabel = {
        let label = UILabel()
        label.textAlignment = .center
        label.font = UIFont.customFont(ofSize: 18)
        label.text = "30天"
        return label
    }()
    
    private let staticMoneyLabel: UILabel = {
        let label = UILabel()
        label.text = "借款金额"
        label.textColor = subTitleColor
        label.font = UIFont.customFont(ofSize: 14.0)
        return label
    }()
    
    private let moneyLabel: UILabel = {
        let label = UILabel()
        label.textAlignment = .center
        label.font = UIFont.customFont(ofSize: 18)
        label.text = "20万元"
        return label
    }()
    
    private let progressView: UIProgressView = {
        let progress = UIProgressView(progressViewStyle: .bar)
        progress.backgroundColor = UIColor.hex("efefef")
        progress.progressTintColor = UIColor.hex("fcc30c")
        progress.layer.masksToBounds = true
        progress.layer.cornerRadius = 4
        return progress
    }()
    
    private let balanceLabel: UILabel = {
        let label = UILabel()
        label.textColor = subTitleColor
        label.text = "剩余金额：10,000元"
        label.font = UIFont.customFont(ofSize: 14.0)
        return label
    }()
    
    private let progressLabel: UILabel = {
        let label = UILabel()
        label.textColor = subTitleColor
        label.text = "65%"
        label.font = UIFont.customFont(ofSize: 14.0)
        return label
    }()
    
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.selectionStyle = .none
        commonInit()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    private func commonInit() {
        contentView.addSubview(staticIncomeLabel)
        contentView.addSubview(incomeLabel)
        contentView.addSubview(staticDateLabel)
        contentView.addSubview(dateLabel)
        contentView.addSubview(staticMoneyLabel)
        contentView.addSubview(moneyLabel)
        contentView.addSubview(progressView)
        contentView.addSubview(balanceLabel)
        contentView.addSubview(progressLabel)
        
        let placeholderView = UIView()
        placeholderView.backgroundColor = UIColor.hex("f2f2f2")
        contentView.addSubview(placeholderView)
        
        staticIncomeLabel.snp.makeConstraints { (maker) in
            maker.top.equalTo(contentView).offset(25)
            maker.left.right.equalTo(contentView)
        }
        
        incomeLabel.snp.makeConstraints { (maker) in
            maker.top.equalTo(staticIncomeLabel.snp.bottom).offset(10)
            maker.left.right.equalTo(contentView)
        }
        
        staticDateLabel.snp.makeConstraints { (maker) in
            maker.top.equalTo(incomeLabel.snp.bottom).offset(47)
            maker.left.equalTo(contentView).offset(60)
            
        }
        
        dateLabel.snp.makeConstraints { (maker) in
            maker.top.equalTo(staticDateLabel.snp.bottom).offset(9)
            maker.centerX.equalTo(staticDateLabel)
        }
        
        staticMoneyLabel.snp.makeConstraints { (maker) in
            maker.centerY.equalTo(staticDateLabel)
            maker.right.equalTo(contentView).offset(-71)
        }
        
        moneyLabel.snp.makeConstraints { (maker) in
            maker.centerY.equalTo(dateLabel)
            maker.centerX.equalTo(staticMoneyLabel)
        }
        
        progressView.snp.makeConstraints { (maker) in
            maker.top.equalTo(dateLabel.snp.bottom).offset(17)
            maker.left.equalTo(contentView).offset(32)
            maker.right.equalTo(contentView).offset(-32)
            maker.height.equalTo(6)
        }
        
        balanceLabel.snp.makeConstraints { (maker) in
            maker.top.equalTo(progressView.snp.bottom).offset(11)
            maker.left.equalTo(contentView).offset(32)
        }
        
        progressLabel.snp.makeConstraints { (maker) in
            maker.centerY.equalTo(balanceLabel)
            maker.right.equalTo(contentView).offset(-31)
        }
        
        placeholderView.snp.makeConstraints { (maker) in
            maker.top.equalTo(balanceLabel.snp.bottom).offset(21)
            maker.left.right.bottom.equalTo(contentView)
            maker.height.equalTo(8)
        }
    }
    
    func setupCell(_ dict: JSON) {
        incomeLabel.attributedText = NSAttributedString.attributedString( dict["expect_rate"].stringValue, mainColor: redTitleColor, mainFont: 72, second: "%", secondColor: redTitleColor, secondFont: 36)
        dateLabel.attributedText = NSAttributedString.attributedString(dict["deadline"].stringValue, second: "天")
        let all_amount = dict["all_amount"].floatValue / 10000
        let tempAmount = String(format: "%.2f", all_amount)
        moneyLabel.attributedText = NSAttributedString.attributedString(tempAmount, second: "万元")
        balanceLabel.text = "剩余金额: \(dict["surplu_amount"].stringValue)元"
        progressLabel.text =  "\(dict["percentage_amount"].floatValue)%"
        progressView.progress = dict["percentage_amount"].floatValue / 100
    }
    
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
    }
}
